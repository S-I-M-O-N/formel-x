' Gambas class file

' Formel-X, a Round counter for slotcar-roads about a light barrier.
' ----------------------------------------------------------------------------
' FSpurwechsel IS part OF Formel-X.
'
' Copyright (C) 2011, 2012 Hermann Friedhoff <foto-schubser@arcor.de>
'
' Formel-X IS free software: you can redistribute it AND / OR modify
' it under the terms OF the GNU General PUBLIC License AS published by
' the Free Software Foundation, either version 3 OF the License, OR
' (at your option) any later version.
'
' Formel-X IS distributed IN the hope that it will be useful,
' but WITHOUT ANY WARRANTY; without even the implied warranty OF
' MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.See the
' GNU General PUBLIC License FOR more details.
'
' You should have received a COPY OF the GNU General PUBLIC License
' along WITH Formel-X. If NOT, see <http://www.gnu.org/licenses/>.
' ----------------------------------------------------------------------------

PUBLIC sInitPfad AS String = User.Home & "/." & Application.Name          ' Pfad zum versteckten Ordner im User-Ordner
PUBLIC sBilderOrdner AS String = "/images"                                ' Ordner der Bilder
PUBLIC iSpuren AS Integer = 2                                             ' Anzahl eingestellter Spuren 2 oder 4

PUBLIC SUB _new()
  DIM sDatei AS String                                                    ' Pfad & Name
  DIM sDatenPfad AS String                                                ' Pfad für die Programm-Dateien
  sDatenPfad = File.Load(sInitPfad & "/Datenpfad.init")                   ' Dateienpfad laden
  sDatei = sDatenPfad & sBilderOrdner & "/r-z.png"                        ' Pfad und Name vom Programm-Icon
  IF Exist(sDatei) THEN FSpurwechsel.Icon = Picture[sDatei]               ' Programm-Icon laden und anzeigen
  sDatei = sDatenPfad & sBilderOrdner & "/Wechsel.jpg"                    ' Pfad und Name vom Spurwechsel-Bild
  IF Exist(sDatei) THEN imgSpurwechsel.Picture = Picture[sDatei]          ' Spurwechsel-Bild laden und anzeigen
  FSpurwechsel.Text = "Spurwechsel - " & Application.Name                 ' Dialogname um Programmnamen erweitern
  AnzahlSpurenLaden()                                                     ' Anzahl Spuren laden
  IF iSpuren = 2 THEN                                                     ' wenn 2 Spuren
    lblSpur2.Visible = FALSE                                              ' Spur 2 auf Spur 3 auf "aus" setzen
    lblSpur3.Visible = FALSE                                              ' Spur 3 auf Spur 4 auf "aus" setzen
    lblSpur4.Visible = FALSE                                              ' Spur 4 auf Spur 0 auf "aus" setzen
    lblSpurX.Visible = TRUE                                               ' Spur 2 auf Spur 1 auf "ein" setzen
  ELSE                                                                    ' wenn 4 Spuren
    lblSpur2.Visible = TRUE                                               ' Spur 2 auf Spur 3 auf "ein" setzen
    lblSpur3.Visible = TRUE                                               ' Spur 3 auf Spur 4 auf "ein" setzen
    lblSpur4.Visible = TRUE                                               ' Spur 4 auf Spur 1 auf "ein" setzen
    lblSpurX.Visible = FALSE                                              ' Spur 2 auf Spur 1 auf "aus" setzen
  ENDIF
CATCH                                                                     ' Fehler abfangen
  Message.Error(Error.Text)                                               ' Fehler anzeigen
END

PUBLIC SUB Form_Open()
  FSpurwechsel.ShowModal                                                  ' Dialog öffnen und Programm auf beschäftigt setzen
END

PUBLIC SUB Form_Close()
  ME.Close                                                                ' Dialog schließen und zurück zum Programm
END

PUBLIC SUB btnOK_Click()                                                  ' der Knopf "OK" wurde gedrückt
  Form_Close()                                                            ' Form_Close() zum Beenden aufrufen
END

PUBLIC SUB AnzahlSpurenLaden()                                            ' Initdatei laden
  DIM sDatei AS String                                                    ' Pfad & Dateiname
  DIM hDatei AS File                                                      ' Handle der Datei
  DIM sZeile AS String                                                    ' eine Zeile
  sDatei = sInitPfad & "/" & Application.Name & ".init"                   ' Pfad & Dateiname der Initdatei
  IF Exist(sDatei) THEN                                                   ' wenn die Datei existiert
    OPEN sDatei FOR READ AS #hDatei                                       ' Datei öffnen
      WHILE NOT Eof(hDatei)                                               ' bis zum Dateiende wiederholen
        LINE INPUT #hDatei, sZeile                                        ' eine Zeile der Datei einlesen
        IF InStr(sZeile, "Anzahl Spuren=") THEN iSpuren = Val(Right$(sZeile, Len(sZeile) - InStr(sZeile, "=")))
      WEND
    CLOSE #hDatei                                                         ' Datei schließen
  ENDIF
CATCH                                                                     ' Fehler abfangen
  Message.Error(Error.Text)                                               ' Fehler anzeigen
END
